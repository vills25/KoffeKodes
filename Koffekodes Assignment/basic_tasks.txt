-- Write a function to reverse a string without using slicing.

-- Create a program to count the frequency of each character in a given string.

Implement a function to check if a number is an Armstrong number.

-- Write a program to merge two dictionaries and add values of common keys.

-- Create a function to flatten a nested list.
   Example: [[1, 2], [3, [4, 5]]] -> [1, 2, 3, 4, 5]

Write a program to find all prime numbers in a given range.

-- Create a program to check if a given year is a leap year without using calendar.

Write a function to determine if two strings are anagrams of each other.

-- Implement a number guessing game where the program gives feedback (too high, too low).

-- Develop a program that finds the longest palindrome in a given string.

-- Write a function that takes a list and returns the second largest number.

-- Implement a function to calculate the factorial of a number using recursion.

Create a function to find the GCD of two numbers without using built-in functions.

Write a program to generate Pascal's triangle up to a given number of rows.

Implement a function that calculates the sum of digits of a number until the sum is a single digit.

-- Write a program to count the number of words in a file.

-- Create a program to find and replace a word in a file with another word.

Write a function to merge two files line by line into a third file.

-- Implement a program to check if a file is empty.

Create a script that reads a CSV file and prints it in a tabular format.

-- Create a class for a bank account with deposit, withdraw, and check balance methods.

Write a class to represent a 2D point and implement methods for calculating distance from another point.

-- Implement a class hierarchy for shapes (e.g., Circle, Rectangle) with area and perimeter methods.

Create a class for a queue using lists with methods for enqueue, dequeue, and checking if empty.

-- Write a class that implements a basic calculator supporting add, subtract, multiply, and divide operations.

Write a decorator to time the execution of a function.

-- Create a program to find duplicates in a list without using sets.

Write a script to sort a list of tuples based on the second element.

Implement a program to check if a string is a valid IP address.

Create a program to generate all permutations of a given string.


